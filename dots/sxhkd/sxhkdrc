#
# bspwm hotkeys
# for special keys, e.g. "semicolon":
# <https://github.com/baskerville/sxhkd/blob/8211d20326874dd96303bd331c58ba3ad4d6e54d/src/parse.c>
#

# switch focus to left/right monitor
super + shift + bracket{left,right}
    bspc monitor -f {prev,next}

# move window/desktop to left/right monitor
super + {shift,ctrl} + alt + {h,l,k,j}
    bspc {node,desktop} -m {L,R,A,B}

# force close current window
super + shift + alt + q
    bspc node -c

# toggle floating/fullscreen/tiled
super + {s,f,o}
    bspc node -t ~{floating,fullscreen,tiled}

# toggle sticky
super + y
    bspc node -g sticky

# focus on previous window/desktop
super + {Tab,grave}
    bspc {node,desktop} -f last

# move focus across windows
super + {h,j,k,l}
    bspc node -f {west,south,north,east}

# switch between tiled and monocle
# super + shift + m
#     bspc desktop -l next

# switch between nodes in monocle
super + alt + {h,l}
    bspc node -f {next,prev}.local

# swap windows
super + shift + {h,j,k,l}
    bspc node -s {west,south,north,east}

# cycle windows forward/backwards
super + {comma,period}
    bspc node @/ -C {backward,forward}

# rotate window layout
super + question
    bspc node @/ -R 90

# move focus across desktops
super + bracket{left,right}
    bspc desktop -f {prev.local,next.local}

# preselect new window location
super + ctrl + {h,j,k,l}
    bspc node -p {west,south,north,east}

# place focused floating window
# at the preselected position
super + shift + s
    bspc node -n last.\!automatic -t tiled

# move window to desktop
super + shift + {1-9,0}
    bspc node -d ^{1-9,10}

# focus desktop
super + {1-9,0}
    bspc desktop -f ^{1-9,10}

super + Return
    kitty

super + n
    connect

super + space
    dmenu_run -l 10

super + alt + k
    lock

# toggle redshift
super + z
    pkill -USR1 redshift

# toggle bluetooth
super + shift + b
    bt toggle; notify-send "toggling bluetooth"

# toggle wifi
super + shift + w
    sudo wifi toggle; notify-send "$(wifi)"

super + slash
    daemon

# ~~screenshots/recordings~~

# region
@super + alt + s
    shot region

# focused window to file
@super + alt + shift + s
    shot focused

# screen to file
@super + alt + shift + ctrl + s
    shot full

# record region, press again to stop
@super + shift + r
    if pgrep -x recordmydesktop > /dev/null; then notify-send "[rec] saving..." && pkill recordmydesktop; else rec region; fi;

# media buttons
# these are prefixed with `super`
# so they also can work as regular function keys

# Device 0 is the Built-in Audio Analog Stereo
super + {F10, XF86AudioRaiseVolume}
    pactl -- set-sink-volume @DEFAULT_SINK@ +5%

# Device 0 is the Built-in Audio Analog Stereo
super + {F9, XF86AudioLowerVolume}
    pactl -- set-sink-volume @DEFAULT_SINK@ -5%

# Device 0 is the Built-in Audio Analog Stereo
super + {F8, XF86AudioMute}
    pactl set-sink-mute @DEFAULT_SINK@ toggle

super + {F4, XF86AudioMicMute}
    mute toggle

super + {F7, XF86MonBrightnessUp}
    sudo glow +200

super + shift + {F7, XF86MonBrightnessUp}
    sudo glow +500

super + {F6, XF86MonBrightnessDown}
    sudo glow -200

super + shift + {F6, XF86MonBrightnessDown}
    sudo glow -500

super + shift + alt + {F6, XF86MonBrightnessDown}
    sudo glow -1

super + t
    bspc rule -a kitty -o state=floating && kitty --working-directory ~/notes -e vi todo.md

super + quoteright
    bspc rule -a kitty -o state=floating && kitty --working-directory ~/notes/logs -e ~/.bin/log

super + shift + quoteright
    bspc rule -a kitty -o state=floating && kitty --working-directory ~/notes/music -e vi scratch.md

super + p
    bspc rule -a kitty -o state=floating && kitty -e ~/.bin/keepass

super + d
    browse

super + q
    search

super + a
    bspc rule -a kitty -o state=floating && kitty -e ~/.bin/2fa

super + semicolon
    bspc rule -a kitty -o state=floating && kitty -e ncmpcpp

# super + shift + w
# 	bspc node focused -g hidden=on

super + w
    win go

super + equal
    mpc toggle

super + plus
    mpvc toggle

super + minus
    task

# super + m
#     bspc rule -a kitty -o state=floating && kitty -e mutt

super + g
    pickcolor

super + shift + t
    timeshift

super + c
    bspc rule -a kitty -o state=floating && kitty -e bash -c 'agenda view | less -R'

# make sxhkd reload its configuration files:
super + Escape
    pkill -USR1 -x sxhkd; notify-send "sxhkd config reloaded"

Print
    if pgrep -x panel > /dev/null; then pkill panel; else panel; fi;

alt + space
    status notify
