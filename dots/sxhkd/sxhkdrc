#
# bspwm hotkeys
# for special keys, e.g. "semicolon":
# <https://github.com/baskerville/sxhkd/blob/8211d20326874dd96303bd331c58ba3ad4d6e54d/src/parse.c>
#

# switch focus to left/right monitor
super + alt + {h,l}
    bspc monitor -f {L,R}

# move window/desktop to left/right monitor
super + {shift,ctrl} + alt + {h,l,k,j}
    bspc {node,desktop} -m {L,R,A,B}

# force close current window
super + shift + alt + q
    bspc node -c

# toggle floating/fullscreen/tiled
super + {s,f,o}
    bspc node -t ~{floating,fullscreen,tiled}

# toggle sticky
super + y
    bspc node -g sticky

# focus on previous window/desktop
super + {Tab,grave}
    bspc {node,desktop} -f last

# move focus across windows
super + {h,j,k,l}
    bspc node -f {west,south,north,east}

# swap windows
super + shift + {h,j,k,l}
    bspc node -s {west,south,north,east}

# cycle windows forward/backwards
super + {comma,period}
    bspc node @/ -C {backward,forward}

# rotate window layout
super + question
    bspc node @/ -R 90

# move focus across desktops
super + bracket{left,right}
    bspc desktop -f {prev.local,next.local}

# preselect new window location
super + ctrl + {h,j,k,l}
    bspc node -p {west,south,north,east}

# move window to desktop
super + shift + {1-9,0}
    bspc node -d ^{1-9,10}

# focus desktop
super + {1-9,0}
    bspc desktop -f ^{1-9,10}

super + Return
    urxvt

super + g
    bspc rule -a URxvt -o state=floating && urxvt -e tmux attach -t 0

super + n
    bspc rule -a URxvt -o state=floating && urxvt -e wicd-curses

super + space
    dmenu_run -l 10

super + ctrl + c
    pick-colour-picker

super + alt + k
    lock

# toggle redshift
super + z
    pkill -USR1 redshift

# toggle caffeine
super + c
    caffeine

# toggle bluetooth
super + b
    bt toggle; notify-send "toggling bluetooth"

# toggle wifi
super + w
    sudo wifi toggle; notify-send "$(wifi)"

super + slash
    daemon

# ~~screenshots/recordings~~

# region
@super + alt + s
    shot region

# focused window to file
@super + alt + shift + s
    shot focused

# screen to file
@super + alt + shift + ctrl + s
    shot full

# record region, press again to stop
@super + r
    if pgrep -x recordmydesktop > /dev/null; then notify-send "[rec] saving..." && pkill recordmydesktop; else rec region; fi;
#
# media buttons
# these are prefixed with `super`
# so they also can work as regular function keys
#

super + {F10, XF86AudioRaiseVolume}
    amixer -D pulse set -M Master 5%+

super + {F9, XF86AudioLowerVolume}
    amixer -D pulse set -M Master 5%-

super + {F8, XF86AudioMute}
    notify-send "volume $(amixer -D pulse set -M Master toggle | sed -n 's/^.*\[\([a-z]*\)\]/\1/p' | head -n 1)"

super + {F7, XF86MonBrightnessUp}
    xbacklight -inc 5

super + shift + {F7, XF86MonBrightnessUp}
    xbacklight -inc 20

super + {F6, XF86MonBrightnessDown}
    xbacklight -dec 5

super + shift + {F6, XF86MonBrightnessDown}
    xbacklight -dec 20

super + {F5, XF86AudioPlay}
    mpc toggle

super + {F4, XF86AudioStop}
    mpc stop

super + {F2, XF86AudioNext}
    mpc next

super + {F1, XF86AudioPrev}
    mpc prev

super + t
    bspc rule -a URxvt -o state=floating && urxvt -e vi ~/notes/todo.md

super + p
    bspc rule -a URxvt -o state=floating && urxvt -e ~/.bin/keepass

super + q
    q

super + a
    bspc rule -a URxvt -o state=floating && urxvt -e ~/.bin/2fa

super + semicolon
    bspc rule -a URxvt -o state=floating && urxvt -e ncmpcpp

super + minus
    task

super + shift + minus
    if pgrep -x panel > /dev/null; then pkill panel; else panel; fi;

super + backslash
    togglewin ^Signal

super + equal
    togglewin ^Slack

super + plus
    togglewin Discord$

super + shift + backslash
    togglewin ^Patchwork

super + e
    emo

super + m
    bspc rule -a URxvt -o state=floating && urxvt -e mutt

super + apostrophe
    note

super + i
    savetext

# make sxhkd reload its configuration files:
super + Escape
    pkill -USR1 -x sxhkd; notify-send "sxhkd config reloaded"
