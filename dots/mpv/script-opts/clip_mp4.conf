# if yes, only encode the currently active tracks
# for example, mute the player / hide the subtitles if you don't want audio / subs to be part of the extract
only_active_tracks=no

# additional parameters passed to ffmpeg
codec=-c:a aac -c:v libx264 -crf 19 -preset veryfast -fflags +genpts

# format of the output filename
# Does basic interpolation on the following variables: $f, $x, $t, $s, $e, $d, $p, $n which respectively represent
# input filename, input extension, title, start timestamp, end timestamp, duration, profile name and an incrementing number in case of conflicts
# if the extension is not among the recognized ones, it will default to mkv
output_format=$f__$n.mp4

# the directory in which to create the extract
# empty means the same directory as the input file
# relative paths are relative to mpv's working directory, absolute ones work like you would expect
output_directory=clips

# if yes, the ffmpeg process will run detached from mpv and we won't know if it succeeded or not
# if no, we know the result of calling ffmpeg, but we can only encode one extract at a time and mpv will block on exit
detached=no

# executable to run when encoding (or its full path if not in PATH)
# for example, this can be used with a wrapper script that calls ffmpeg and triggers a notification when finished
# note that the executable gets the ffmpeg arguments as-is, and is expected to call ffmpeg itself
ffmpeg_command=ffmpeg

# if yes, print the ffmpeg call before executing it
print=yes
