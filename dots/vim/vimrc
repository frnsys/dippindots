" wild
set wildmenu " enhance command-line completion
set wildignore+=*.o,*.out,*.obj,.git,*.rbc,*.rbo,*.class,.svn,*.gem,*.meta
set wildignore+=*.zip,*.tar.gz,*.tar.bz2,*.rar,*.tar.xz
set wildignore+=*/.bundle/*,*/.sass-cache/*,node_modules
set wildignore+=*.swp,*~,._*
set wildignore+=*.pyc,*.egg-info,__pycache__

" has to be set before the plugin loads
" have to use the nightly toolchain for some reason
" or autocomplete doesn't work
let g:ale_completion_enabled = 1
let g:ale_completion_autoimport = 1
let g:ale_rust_rls_toolchain = 'nightly'

" to install new plugins,
" add them here and then run the command:
" call minpac#update()
packadd minpac
call minpac#init()

set rtp+=~/.fzf
call minpac#add('junegunn/fzf')
call minpac#add('junegunn/fzf.vim')
call minpac#add('tpope/vim-commentary')
call minpac#add('dense-analysis/ale')
call minpac#add('easymotion/vim-easymotion')

" Syntax
call minpac#add('mxw/vim-jsx')
call minpac#add('tikhomirov/vim-glsl')
call minpac#add('lepture/vim-jinja')
call minpac#add('pangloss/vim-javascript')
call minpac#add('sirtaj/vim-openscad')
call minpac#add('habamax/vim-godot')

" Markdown
call minpac#add('dhruvasagar/vim-table-mode')

packloadall

colorscheme dark

set nocompatible      			" Use vim, no vi defaults
syntax enable         			" Turn on syntax highlighting
set encoding=utf-8 nobomb       " Set default encoding to UTF-8
set noerrorbells 				" Disable error bells
set novisualbell                " Disable visual bells
set showmode 					" Show the current mode
set timeoutlen=100              " Short timeout to avoid lag
set showcmd 					" Show the command as it's typed
set shortmess=atI 				" Hide Vim intro message
let mapleader=";" 		        " Change mapleader
set wrap
set textwidth=0 wrapmargin=0 formatoptions=cq
set display+=lastline
set hidden
set clipboard^=unnamed,unnamedplus " Use OS clipboard (on +clipboard compiled Vim)
set tags=./tags,./TAGS,tags,TAGS,~/.vimtags
set updatetime=750

" webbrowser for `gx`
let g:netrw_browsex_viewer='firefox'

" don’t add empty newlines at the end of files
set binary
set noeol

" specify how vim saves files
" so it works better with processes
" that watch files for changes
set backupcopy=yes

" automatically trim trailing whitespace on save.
autocmd BufWritePre * :%s/\s\+$//e

" navigation
set number            			" Show line numbers
set nostartofline 				" Don't reset cursor to start of line when moving
set cursorline 				    " Highlight current line
set scrolloff=3 				" Start scrolling three lines before border
set showmatch 					" Show matching brackets
let &showbreak='↳ '             " Show this at the start of wrapped lines
set laststatus=0                " Never show the status bar
set relativenumber 			    " Use relative line numbering

" search
set incsearch   " Search as pattern is typed
set ignorecase  " Case insensitive searches...
set smartcase   " Unless they contain 1+ capital letters
set hlsearch    " Highlight search matches
set gdefault 	" Global search/replace by default

" bind return to clear last search highlight.
nnoremap <CR> :noh<CR><CR>

" indentation
set smartindent
set autoindent

" conceal
set conceallevel=1

" folding
set foldlevel=1
set foldmethod=indent 	" Set fold based on indent
set foldnestmax=6 		" Max 6 levels
set nofoldenable 		" No fold by default

" whitespace
set wrap                          " Wrap lines
set tabstop=4                     " Set tab spaces
set shiftwidth=4                  " Set autoindent (with <<) spaces
set expandtab                     " Use spaces, not tabs
set list                          " Show invisible characters
set backspace=indent,eol,start    " Backspace through everything in insert mode

" list chars (i.e. hidden characters)
set listchars=""                  " Reset the listchars
set listchars=tab:\ \             " A tab should display as "  "
set listchars+=trail:.            " Show trailing spaces as dots
set listchars+=extends:>          " The character to show in the last column when wrap is
                                  " off and the line continues beyond the right of the screen
set listchars+=precedes:<         " The character to show in the last column when wrap is
                                  " off and the line continues beyond the right of the screen

" centralize backup, swap, & undo files
set backupdir^=~/.vim/.backup// 	" Backup files
set directory^=~/.vim/.temp// 		" Swap files
if exists("&undodir")
	set undodir=~/.vim/.undo 		" Undo files
    set undofile
    set undolevels=500
    set undoreload=500
endif


" filetypes
filetype plugin indent on " Turn on filetype plugins (:help filetype-plugin)
if has("autocmd")
  " make Python follow PEP8 for whitespace (http://www.python.org/dev/peps/pep-0008/)
  au FileType python setlocal softtabstop=4 tabstop=4 shiftwidth=4

  " other filetype specific settings
  au FileType crontab setlocal backupcopy=yes
  au FileType css setlocal tabstop=2 shiftwidth=2
  au FileType sass setlocal tabstop=2 shiftwidth=2
  au FileType javascript setlocal tabstop=2 shiftwidth=2
  au FileType vue setlocal tabstop=2 shiftwidth=2

  " for text
  au FileType text setlocal nocursorcolumn spell complete+=kspell

  " remember last location in file, but not for commit messages.
  au BufReadPost * if &filetype !~ '^git\c' && line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal! g`\"" | endif
endif

" Per default, netrw leaves unmodified buffers open. This autocommand
" deletes netrw's buffer once it's hidden (using ':q', for example)
autocmd FileType netrw setl bufhidden=delete

" map the arrow keys to be based on display lines, not physical lines
map <Down> gj
map <Up> gk

map gr gT
nnoremap [t :tabprevious<cr>
nnoremap ]t :tabnext<cr>

" bind jk to escape
imap jk <Esc>
xnoremap jk <Esc>

" open new line from insert mode
imap <C-o> <esc>o

" quick buffer nav
nnoremap [b :bprevious<cr>
nnoremap ]b :bnext<cr>

" quickfix nav
nnoremap [c :cprev<cr>
nnoremap ]c :cnext<cr>

" bind | and _ to vertical and horizontal splits
nnoremap <expr><silent> \| !v:count ? "<C-W>v<C-W><Right>" : '\|'
nnoremap <expr><silent> _  !v:count ? "<C-W>s<C-W><Down>"  : '_'

" new tab
nmap <S-t> :tabnew<cr>

" netrw
let g:netrw_banner=0
let g:netrw_liststyle=3
let g:netrw_list_hide= '.*\.swp$,.*\.pyc,\.tags,\.git,\.sass-cache,node_modules'
nmap - :Explore<cr>

" show current filename
nnoremap <C-h> :f<cr>

" command flubs
command WQ wq
command Wq wq
command W w
command Q q

" custom syntax
augroup customSyntax
    autocmd!
    autocmd WinEnter,VimEnter * :silent! call matchadd('Note', 'ENH', -1)
augroup END

" don't automatically insert first omnicompletion match
set completeopt=noinsert,menuone

" map omnicompletion to ctrl+n in insert mode
inoremap <c-n> <c-x><c-o>

" auto-close quickfix window if it's the only one left
" this makes it easier to :q quit with a file has e.g. syntactic errors
autocmd WinEnter * if &buftype ==# 'quickfix' && winnr('$') == 1 | quit | endif
