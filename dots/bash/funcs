# easier archive extraction
function extract() {
    if [ -f "$1" ] ; then
        case $1 in
            *.tar.xz)    tar Jxvf "$1"     ;;
            *.txz)       tar Jxvf "$1"     ;;
            *.tar.bz2)   tar xvjf "$1"     ;;
            *.tar.bz2)   tar xvjf "$1"     ;;
            *.tar.gz)    tar xvzf "$1"     ;;
            *.bz2)       bunzip2 "$1"      ;;
            *.rar)       unrar x "$1"      ;;
            *.gz)        gunzip "$1"       ;;
            *.tar)       tar xvf "$1"      ;;
            *.tbz2)      tar xvjf "$1"     ;;
            *.tgz)       tar xvzf "$1"     ;;
            *.zip)       unzip "$1"        ;;
            *.Z)         uncompress "$1"   ;;
            *.7z)        7z x "$1"         ;;
            *.xz)        xz -d "$1"        ;;
            *)           echo "'$1' cannot be extracted via >extract<" ;;
        esac
    else
        echo "'$1' is not a valid file!"
    fi
}

function rand() {
    cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1
}

# get pull request by number
function gpr() {
    git fetch origin pull/$1/head:pr$1; git checkout pr$1
}

# compress video
function shrinkvid() {
    # libx264 is way faster than libx265 but maybe doesn't get as small
    # higher crf -> lower quality
    ffmpeg -i "$1" -filter:v scale="trunc(oh*a/2)*2:720" -vcodec libx264 -crf 23 -preset fast -c:a aac "sm/${1%.*}.mp4"
}

function gif2mp4() {
    ffmpeg -i "$1" -movflags faststart -pix_fmt yuv420p -vf "scale=trunc(iw/2)*2:trunc(ih/2)*2" "${1%.gif}.mp4"
}

function mkv2mp4() {
    ffmpeg -i "$1" -preset veryfast -c:v libx264 -c:a aac "${1%.*}.mp4"
}

function clipvid() {
    ffmpeg -ss "$2" -to "$3" -i "$1" -c copy "$4"
}

function md2pdf() {
    FILENAME="$2"
    if [ -z ${FILENAME} ]; then
        FILENAME="${1%.md}.pdf"
    fi
    # Or TimesTen for the font
    pandoc --pdf-engine xelatex -V geometry:margin=0.5in -V documentclass=extarticle -V fontsize=10pt -V mainfont:"Times Ten" -o "$FILENAME" "$1"
    echo "$FILENAME"
}

function flac2mp3() {
    FILENAME="$2"
    if [ -z ${FILENAME} ]; then
        FILENAME="${1%.flac}.mp3"
    fi
    ffmpeg -i "$1" -ab 320k -map_metadata 0 -id3v2_version 3 "$FILENAME"
    echo "$FILENAME"
}
