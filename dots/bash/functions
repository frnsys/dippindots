function wakehubble() {
    # svalbard
    # make sure wakeonlan is installed: apt install wakeonlan
    # make sure there's a user on svalbard named ftseng
    tunnel go starbase 10023 'wakeonlan '$HUBBLE
}

function pushhubble() {
    # push a local file to hubble
    # $1 = local file
    # $2 = remote path (optional)
    TO=${2:-"~/$(basename $1)"}
    tunnel push "$1" ftseng@starbase:10022:ftseng:"$TO"
}

function pullhubble() {
    # pull a local file from hubble
    # $1 = remote file
    # $2 = local path (optoinal)

    TO=${2:-"."}
    if [[ -d $TO ]]; then
        TO=$TO/$(basename $1)
    fi
    tunnel pull ftseng@starbase:10022:ftseng:"$1" "$TO"
}

function hubble() {
    ssh -Y hubble.local 2> /dev/null || tunnel go starbase 10022
}

# Activate a Python virtualenv by name.
function aa() {
    eval "$(pyenv init -)"
    pyenv activate $1
}

# Download youtube vids
function getvid() {
    yt-dlp -f 'best[ext=mp4][height<=720]' --merge-output-format mp4 "$1"
}

# easier archive extraction
function extract() {
    if [ -f "$1" ] ; then
        case $1 in
            *.tar.xz)    tar Jxvf "$1"     ;;
            *.txz)       tar Jxvf "$1"     ;;
            *.tar.bz2)   tar xvjf "$1"     ;;
            *.tar.bz2)   tar xvjf "$1"     ;;
            *.tar.gz)    tar xvzf "$1"     ;;
            *.bz2)       bunzip2 "$1"      ;;
            *.rar)       unrar x "$1"      ;;
            *.gz)        gunzip "$1"       ;;
            *.tar)       tar xvf "$1"      ;;
            *.tbz2)      tar xvjf "$1"     ;;
            *.tgz)       tar xvzf "$1"     ;;
            *.zip)       unzip "$1"        ;;
            *.Z)         uncompress "$1"   ;;
            *.7z)        7z x "$1"         ;;
            *)           echo "'$1' cannot be extracted via >extract<" ;;
        esac
    else
        echo "'$1' is not a valid file!"
    fi
}

# convenience function for youtube
function watch() {
    mpv --geometry=640x360-25-50 --ytdl-format=best[height=720] "$1"
}

function rand() {
    cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1
}

# get pull request by number
function gpr() {
    git fetch origin pull/$1/head:pr$1; git checkout pr$1
}

# compress video
function shrinkvid() {
    # libx264 is way faster than libx265 but maybe doesn't get as small
    # higher crf -> lower quality
    ffmpeg -i "$1" -filter:v scale="trunc(oh*a/2)*2:720" -vcodec libx264 -crf 23 -preset slower -c:a aac "sm/${1%.*}.mp4"
}

function gif2mp4() {
    ffmpeg -i "$1" -movflags faststart -pix_fmt yuv420p -vf "scale=trunc(iw/2)*2:trunc(ih/2)*2" "${1%.gif}.mp4"
}

function mkv2mp4() {
    ffmpeg -i "$1" -preset veryfast -c:v libx264 -c:a aac "${1%.*}.mp4"
}

function ytdl2gif() {
    URL=$1
    youtube-dl "$1"
    FNAME=$(youtube-dl --get-filename "$1")
    GIFNAME="${FNAME%.*}.gif"
    vid2gif -f 12 "$FNAME" "$GIFNAME"
    rm "$FNAME"
    echo "$GIFNAME"
}

function clipvid() {
    ffmpeg -ss "$2" -to "$3" -i "$1" -c copy "$4"
}

function pdfpages() {
    for pdf in *.pdf; do
        echo "[$(pdfinfo "$pdf" | grep Pages | awk '{print $2}')] $pdf"
    done
}
