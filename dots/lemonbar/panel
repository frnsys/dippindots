#!/bin/bash

if [ $(pgrep -cx panel) -gt 1 ] ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

source ~/.config/lemonbar/colors

# Remove bottom padding when exiting
set -e
function cleanup {
    bspc config bottom_padding 0
}
trap cleanup EXIT

PANEL_PADDING=0
PANEL_Y_OFFSET=0
PANEL_HEIGHT=3
PANEL_NAME="wm_panel"

FONT1="Roboto Mono Light:size=7"                                   # western
FONT2="-misc-fixed-medium-r-normal-ja-16-0-75-75-c-0-iso10646-1"   # characters

# For determining individual monitor bar geometries (positioning)
CUR_X_OFFSET=$((0 + $PANEL_PADDING))

# -2 to slightly fix padding
# bspc config bottom_padding $(($PANEL_HEIGHT + $PANEL_PADDING - 2))

while read -r mon; do
    # Remove existing panel fifos and create new ones
    [ -e "$PANEL_FIFO$mon" ] && rm "$PANEL_FIFO$mon"
    mkfifo "$PANEL_FIFO$mon"

    # Only show bspc control info for the monitor this panel is on
    bspc subscribe |\
        grep -oE "[Mm]$mon[^TM]*[TML]" --line-buffered |\
        while read line; do echo W$line; done \
            > "$PANEL_FIFO$mon" &

    ~/.bin/status bar > "$PANEL_FIFO$mon" &

    # Grep out current monitor width
    CUR_MON_WIDTH=$(bspc query -T -m $mon | grep -oE "width\":[0-9]{2,6}" | head -n 1 | grep -oE "[0-9]{2,6}")

    # Create the panel with the proper geometry/positioning
    # -b flag docks the bar at the bottom of the screen
    cat "$PANEL_FIFO$mon" | panel_bar | lemonbar -n "$PANEL_NAME" -b -g $((${CUR_MON_WIDTH} - $PANEL_PADDING*2))x${PANEL_HEIGHT}+${CUR_X_OFFSET}+$((${PANEL_PADDING} + ${PANEL_Y_OFFSET})) -f "$FONT1" -f "$FONT2" -F "$COLOR_FOREGROUND" -B "$COLOR_BACKGROUND" | bash &

    # Update the offset
    CUR_X_OFFSET=$(($CUR_X_OFFSET + $CUR_MON_WIDTH))
done <<< $"$(bspc query -M --names | sort)" # sort so that monitor L always comes before monitor R

# So fullscreen goes over the panel
xdo raise $(xdo id -n root)
xdo lower $(xdo id -a $PANEL_NAME)

wait
