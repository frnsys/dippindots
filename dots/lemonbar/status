#!/bin/bash
source ~/.config/lemonbar/colors

UPDATE_INTERVAL=3

IFACE=wlan0
VPN_CONFIG=/home/ftseng/docs/vpn/active/airvpn-ssl.ovpn

wifi() {
    if [[ "$(/usr/bin/wifi)" == *"= on" ]]; then
        SSID=$(iwconfig $IFACE | sed -rn 's/.+ESSID:"(.+)"/\1/p')
        if [ -z "$SSID" ]; then
            ROUTE=$(route | grep '^default' | grep -o '[^ ]*$')
            if [ ! -z "$(echo "$ROUTE" | grep -E 'enp0s20u2|usb0')" ]; then
                # Tethered
                color="$COLOR_URGENT"
            elif [ ! -z "$(echo "$ROUTE" | grep -E 'eth0')" ]; then
                # Wired
                color="$COLOR_URGENT"
            else
                # Offline
                color="#878787"
            fi
        else
            color="$COLOR_URGENT"
        fi
    else
        # Interface off
        color="#000000"
    fi

    if pgrep openvpn > /dev/null; then
        # first check that openvpn is running,
        # then check that we are routed through the vpn gateway
        # sometimes the vpn gateway ip shows up reverse in route (not sure why)
        vpn_gateway=$(cat $VPN_CONFIG | grep net_gateway | cut -d' ' -f2)
        vpn_gateway_rev=$(echo $vpn_gateway | sed -r 's/^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})/\4.\3.\2.\1/')
        if route | grep -q "$vpn_gateway\|$vpn_gateway_rev"; then
            color="#43cc70"
        fi
    fi
    echo "%{B$color}        %{B-}"
}


volume() {
    STATUS=$(amixer -D pulse get -M Master)

    BACKGROUND_COLOR="#555555"
    STATE=$(echo $STATUS | sed -n 's/^.*\[\(o[nf]\+\)]$/\1/p' | uniq)
    if [[ $STATE != "on" ]]; then
        # Muted
        BAR_COLOR="#878787"
    else
        # Active
        BAR_COLOR="#6096E8"
    fi

    LEVEL=$(echo $STATUS | sed -n 's/^.*\[\([0-9]\+\)%.*$/\1/p' | uniq)
    if [ $LEVEL -le 0 ]; then
        echo "%{B$BAR_COLOR}%{B$BACKGROUND_COLOR}          %{B-}"
    elif [ $LEVEL -le 10 ]; then
        echo "%{B$BAR_COLOR} %{B$BACKGROUND_COLOR}         %{B-}"
    elif [ $LEVEL -le 20 ]; then
        echo "%{B$BAR_COLOR}  %{B$BACKGROUND_COLOR}        %{B-}"
    elif [ $LEVEL -le 30 ]; then
        echo "%{B$BAR_COLOR}   %{B$BACKGROUND_COLOR}       %{B-}"
    elif [ $LEVEL -le 40 ]; then
        echo "%{B$BAR_COLOR}    %{B$BACKGROUND_COLOR}      %{B-}"
    elif [ $LEVEL -le 50 ]; then
        echo "%{B$BAR_COLOR}     %{B$BACKGROUND_COLOR}     %{B-}"
    elif [ $LEVEL -le 60 ]; then
        echo "%{B$BAR_COLOR}      %{B$BACKGROUND_COLOR}    %{B-}"
    elif [ $LEVEL -le 70 ]; then
        echo "%{B$BAR_COLOR}       %{B$BACKGROUND_COLOR}   %{B-}"
    elif [ $LEVEL -le 80 ]; then
        echo "%{B$BAR_COLOR}        %{B$BACKGROUND_COLOR}  %{B-}"
    elif [ $LEVEL -le 90 ]; then
        echo "%{B$BAR_COLOR}         %{B$BACKGROUND_COLOR} %{B-}"
    elif [ $LEVEL -le 100 ]; then
        echo "%{B$BAR_COLOR}          %{B$BACKGROUND_COLOR}%{B-}"
    fi
}


bluetooth() {
    if [[ "$(bt)" == "on" ]]; then
        echo "%{B#0370FE}  %{B-}"
    else
        echo=""
    fi
}


battery() {
    PERCENT=$(batt percent)
    BACKGROUND_COLOR="#555555"
    if [[ $(batt status) = *"Discharging"* ]]; then
        BAR_COLOR="#dddddd"
        if [ $PERCENT -le 10 ]; then
            BACKGROUND_COLOR="$COLOR_URGENT"
        fi
    else
        BAR_COLOR="#43CC70"
    fi

    if [ $PERCENT -le 0 ]; then
        echo "%{B$BAR_COLOR}%{B$BACKGROUND_COLOR}          %{B-}"
    elif [ $PERCENT -le 10 ]; then
        echo "%{B$BAR_COLOR} %{B$BACKGROUND_COLOR}         %{B-}"
    elif [ $PERCENT -le 20 ]; then
        echo "%{B$BAR_COLOR}  %{B$BACKGROUND_COLOR}        %{B-}"
    elif [ $PERCENT -le 30 ]; then
        echo "%{B$BAR_COLOR}   %{B$BACKGROUND_COLOR}       %{B-}"
    elif [ $PERCENT -le 40 ]; then
        echo "%{B$BAR_COLOR}    %{B$BACKGROUND_COLOR}      %{B-}"
    elif [ $PERCENT -le 50 ]; then
        echo "%{B$BAR_COLOR}     %{B$BACKGROUND_COLOR}     %{B-}"
    elif [ $PERCENT -le 60 ]; then
        echo "%{B$BAR_COLOR}      %{B$BACKGROUND_COLOR}    %{B-}"
    elif [ $PERCENT -le 70 ]; then
        echo "%{B$BAR_COLOR}       %{B$BACKGROUND_COLOR}   %{B-}"
    elif [ $PERCENT -le 80 ]; then
        echo "%{B$BAR_COLOR}        %{B$BACKGROUND_COLOR}  %{B-}"
    elif [ $PERCENT -le 90 ]; then
        echo "%{B$BAR_COLOR}         %{B$BACKGROUND_COLOR} %{B-}"
    elif [ $PERCENT -le 100 ]; then
        echo "%{B$BAR_COLOR}          %{B$BACKGROUND_COLOR}%{B-}"
    fi
}

email() {
    UNREAD=$(notmuch count "tag:unread AND folder:INBOX")
    bg=$COLOR_BACKGROUND
    if (( $UNREAD > 0 )); then
        color="#f9d909"
    else
        color="#555555"
    fi
    echo "%{B$color}  %{B-}"
}

tasks() {
    TASK="$(task status)"
    if [ ! -z "$TASK" ]; then
        echo " %{B#f9b109}        %{B-} "
    else
        echo ""
    fi
}

streaming() {
    STREAMING=$(ps -a | grep twitch)
    if [ -n "$STREAMING" ]; then
        echo " %{B$COLOR_URGENT}        %{B-} "
    else
        echo ""
    fi
}

muted() {
    if [[ $(mute status) = "yes" ]]; then
        color="#878787"
    else
        color="#EF3838"
    fi
    echo "%{B$color} %{B-}"
}

while true; do
    echo "S$(streaming)$(tasks)$(email) $(battery) $(bluetooth)$(muted)$(volume) $(wifi)"
    sleep $UPDATE_INTERVAL
done
