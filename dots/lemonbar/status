#!/bin/bash

source ~/.config/lemonbar/colors

UPDATE_INTERVAL=3

IFACE=wlan0
H_ICON="~ "
M_ICON="- "
L_ICON="_ "
VPN_CONFIG=/home/ftseng/docs/vpn/active/airvpn-ssl.ovpn

CHARGE_ICON="BAT"
PLUGGED_ICON="AC"


wifi() {
    if [[ "$(/usr/bin/wifi)" == *"= on" ]]; then
        SSID=$(iwconfig $IFACE | sed -rn 's/.+ESSID:"(.+)"/\1/p')
        if [ -z "$SSID" ]; then
            TETHER=$(route | grep '^default' | grep -o '[^ ]*$' | grep -E 'enp0s20u2|usb0')
            ETHERNET=$(route | grep '^default' | grep -o '[^ ]*$' | grep -E 'eth0')
            if [ ! -z "$TETHER" ]; then
                status="TETHERED"
            elif [ ! -z "$ETHERNET" ]; then
                status="WIRED"
            else
                status="offline"
            fi
        else
            QUAL_RAW=$(iwconfig $IFACE | grep "Link Quality" | awk '{print $2}' | cut -d'=' -f2)
            QUAL_PERCENT=$(bc <<< "scale=2; ${QUAL_RAW}")

            if (( $(echo "$QUAL_PERCENT >= 0.9" | bc -l) )); then
                ICON=$H_ICON
            elif (( $(echo "$QUAL_PERCENT >= 0.6" | bc -l) )); then
                ICON=$M_ICON
            else
                ICON=$L_ICON
            fi
            status="${ICON}${SSID}"
        fi
    else
        status="off"
    fi

    # change fg based on vpn status
    # bg=$COLOR_URGENT
    # fg=$COLOR_BACKGROUND
    bg=$COLOR_BACKGROUND
    fg=$COLOR_FOREGROUND
    if pgrep openvpn > /dev/null; then
        # first check that openvpn is running,
        # then check that we are routed through the vpn gateway
        # sometimes the vpn gateway ip shows up reverse in route (not sure why)
        vpn_gateway=$(cat $VPN_CONFIG | grep net_gateway | cut -d' ' -f2)
        vpn_gateway_rev=$(echo $vpn_gateway | sed -r 's/^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})/\4.\3.\2.\1/')
        if route | grep -q "$vpn_gateway\|$vpn_gateway_rev"; then
            fg="#43cc70"
        fi
    fi
    echo "%{B$bg}%{F$fg} ${status} %{F-}%{B-}"
}


volume() {
    STATUS=$(amixer -D pulse get -M Master)
    LEVEL=$(echo $STATUS | sed -n 's/^.*\[\([0-9]\+\)%.*$/\1/p' | uniq)
    STATE=$(echo $STATUS | sed -n 's/^.*\[\(o[nf]\+\)]$/\1/p' | uniq)

    bg=$COLOR_BACKGROUND
    fg=$COLOR_FOREGROUND
    if [[ $STATE != "on" ]]; then
        ICON="MUTE"
    else
        ICON="V$LEVEL"
    fi
    echo "%{B$bg}%{F$fg}${ICON}%{F-}%{B-}"
}


bluetooth() {
    if [[ "$(bt)" == "on" ]]; then
        ICON="B"
    else
        ICON=""
    fi
    echo "$ICON"
}


battery() {
    PERCENT=$(batt percent)

    if [[ $(batt status) = *"Discharging"* ]]; then
        if [ $PERCENT -le 10 ]; then
            echo "%{B$COLOR_URGENT} |::: %{B-}"
        elif [ $PERCENT -le 50 ]; then
            echo "%{B$COLOR_BACKGROUND}%{F$COLOR_FOREGROUND}||::%{F-}%{B-}"
        elif [ $PERCENT -le 75 ]; then
            echo "%{B$COLOR_BACKGROUND}%{F$COLOR_FOREGROUND}|||:%{F-}%{B-}"
        else
            echo "%{B$COLOR_BACKGROUND}%{F$COLOR_FOREGROUND}||||%{F-}%{B-}"
        fi
    else
        echo "${PLUGGED_ICON}:${PERCENT}% "
    fi
}

email() {
    INBOX=$(notmuch count "folder:INBOX")
    UNREAD=$(notmuch count "tag:unread AND folder:INBOX")
    bg=$COLOR_BACKGROUND
    if (( $UNREAD > 0 )); then
        fg="#0000ff"
    else
        fg="#ffffff"
    fi
    echo "%{B$bg}%{F$fg}M${INBOX}%{F-}%{B-}"
}

notifications() {
    if [ -f /tmp/dunst_paused ]; then
        echo "S"
    else
        echo ""
    fi
}

tasks() {
    TASK="$(task status)"
    if [ ! -z "$TASK" ]; then
        echo "T:[$TASK]"
    else
        echo ""
    fi
}

streaming() {
    STREAMING=$(pgrep twitch)
    bg=$COLOR_URGENT
    if [ -n "$STREAMING" ]; then
        echo "%{B$bg} LIVE %{B-}"
    else
        echo ""
    fi
}

muted() {
    if [[ $(mute status) = "yes" ]]; then
        echo "% "
    fi
}

while true; do
    echo 'S'$(notifications)$(tasks) $(streaming) $(bluetooth) $(battery) $(email) $(muted)$(volume)$(wifi)
    sleep $UPDATE_INTERVAL
done
