[mgr]
ratio         = [ 1, 4, 3 ]
sort_by        = "natural"
sort_sensitive = false
sort_reverse   = false
sort_dir_first = true
show_hidden    = false
show_symlink   = true
linemode       = "size"

[preview]
tab_size   = 2
max_width  = 600
max_height = 900
cache_dir  = ""

[opener]
archive = [
	{ run = 'unar "$1"', desc = "Extract here" },
]
text = [
	{ run = 'nvim "$@"', block = true, desc = "Editor" },
]
pdf = [
	{ run = 'sioyek "$@"', block = false, orphan = true },
	{ run = 'okular "$@"', block = false, orphan = true },
	{ run = 'evince "$@"', block = false, orphan = true },
	{ run = 'papers "$@"', block = false, orphan = true },
	{ run = 'zathura "$@"', block = false, orphan = true },
]
epub = [
	{ run = 'zathura "$@"', block = false, orphan = true },
]
gif = [
	{ run = 'vu "$@"', block = false },
]
image = [
	{ run = 'vu "$@"', desc = "Open" },
	{ run = 'flatpak run com.github.PintaProject.Pinta "$@"', block = false, desc = "Edit" },
	{ run = '''exiftool "$1"; echo "Press enter to exit"; read''', block = true, desc = "Show EXIF" },
]
video = [
	{ run = 'mpv "$@"', desc = "Play", orphan = true },
	{ run = '''mediainfo "$1"; echo "Press enter to exit"; read''', block = true, desc = "Show media info" },
]
audio = [
	{ run = 'mpv --no-audio-display "$@"', desc = "Play", orphan = true },
	{ run = '''mediainfo "$1"; echo "Press enter to exit"; read''', block = true, desc = "Show media info" },
]
url = [
	{ run = 'firefox $(cat "$@")' },
]
csv = [
    { run = 'visidata "$@"', block = true },
	{ run = 'nvim "$@"', block = true, desc = "Editor" },
]
csvs = [
    { run = 'tabv "$@"', block = true },
]
markdown = [
    { run = 'flatpak run org.gnome.gitlab.somas.Apostrophe "$@"', desc = "Apostrophe" },
]
html = [
    { run = 'firefox "$@"', desc = "Browser" },
]
fallback = []

[open]
rules = [
	{ name = "*/", use = "folder" },

	{ name = "*.url", use = "url" },
	{ name = "*.gif", use = "gif" },
	{ name = "*.csv", use = "csv" },
	{ name = "*.tsv", use = "csv" },
	{ name = "*.csvs", use = "csvs" },
	{ name = "*.txt", use = ["text"] },
	{ name = "*.html", use = ["text", "html"] },
	{ name = "*.md", use = ["text", "markdown"] },

	{ mime = "text/*", use = "text" },
	{ mime = "image/*", use = "image" },
	{ mime = "video/*", use = "video" },
	{ mime = "audio/*", use = "audio" },
	{ mime = "inode/x-empty", use = "text" },
	{ mime = "application/pdf", use = "pdf" },
	{ mime = "application/epub+zip", use = "epub" },

	{ mime = "application/json", use = "text" },
	{ mime = "*/javascript", use = "text" },

	{ mime = "application/zip", use = "archive" },
	{ mime = "application/gzip", use = "archive" },
	{ mime = "application/x-tar", use = "archive" },
	{ mime = "application/x-bzip", use = "archive" },
	{ mime = "application/x-bzip2", use = "archive" },
	{ mime = "application/x-7z-compressed", use = "archive" },
	{ mime = "application/x-rar", use = "archive" },

	{ mime = "*", use = "fallback" },
]

[tasks]
micro_workers = 5
macro_workers = 10
bizarre_retry = 5

# If seeing "Image size exceeds limit"
# when previewing an image, increase this.
image_bound = [8000, 8000]

[log]
enabled = false
