#!/bin/bash

CMD=$1
IFACE=wlan0

if [[ $CMD == 'tmux' ]]; then
    VPN_FG="#[fg=colour10]"
    NO_VPN_FG="#[fg=colour245]"
    NO_NETWORK_FG="#[fg=colour245]"
    RESET_FG="#[fg=colour245]"
    ALERT_FG="#[fg=colour222]"
    URGENT_FG="#[fg=colour196]"
elif [[ $CMD == 'bar' ]]; then
    VPN_FG="#43cc70"
    NO_VPN_FG="#ff4040"
    NO_NETWORK_FG="#878787"
    RESET_FG="#[fg=colour245]"
    ALERT_FG="#[fg=colour222]"
    URGENT_FG="#[fg=colour196]"
fi

_bar() {
    PERCENT=$1
    BACK_COLOR=$2
    FILL_COLOR=$3
    HEAD_COLOR=$4
    n=$(echo "($PERCENT + 10 - 1)/10" | bc)
    bar="%{B$FILL_COLOR}"
    for i in {1..10}; do
        if [ $n -eq $(($i-1)) ]; then
            bar="${bar}%{B$BACK_COLOR}"
        elif [ $n -eq $i ]; then
            bar="${bar}%{B$HEAD_COLOR}"
        fi
        bar="${bar} "
    done
    bar="${bar}%{B-}"
    echo "$bar"
}

wifi() {
    color="$NO_NETWORK_FG";
    if [[ "$(/usr/bin/wifi)" == *"= on" ]]; then
        # change fg based on vpn status
        if [[ $(sudo wg show | grep active) ]]; then
            conn_color="$VPN_FG"
        else
            conn_color="$NO_VPN_FG"
        fi

        SSID=$(iwconfig $IFACE | sed -rn 's/.+ESSID:"(.+)"/\1/p' | sed 's/\s*$//g')
        if [ -z "$SSID" ]; then
            ROUTE=$(route | grep '^default' | grep -o '[^ ]*$')
            if [ ! -z "$(echo "$ROUTE" | grep -E 'enp0s20u2|usb0')" ]; then
                status="TETHERED"
                color="$conn_color"
            elif [ ! -z "$(echo "$ROUTE" | grep -E 'eth0')" ]; then
                status="WIRED"
                color="$conn_color"
            else
                status="offline"
            fi
        else
            status="${SSID}"
            color="$conn_color"
        fi
    else
        status="off"
    fi

    if [[ $CMD == 'bar' ]]; then
        echo "%{B$color}  %{B-}"
    else
        echo "${color}${status}${RESET_FG}"
    fi
}


volume() {
    LEVEL=$(pactl -- get-sink-volume @DEFAULT_SINK@ | head -n1 | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,')
    MUTED=$(pactl -- get-sink-mute @DEFAULT_SINK@ | cut -d' ' -f 2)

    if [[ $CMD == 'bar' ]]; then
        BACK_COLOR="#555555"
        if [[ $MUTED != "no" ]]; then
            # Muted
            FILL_COLOR="#878787"
            HEAD_COLOR="#878787"
        else
            # Active
            FILL_COLOR="#6096E8"
            HEAD_COLOR="#9ec5ff"
            BACK_COLOR="#37588c"
        fi
        echo "$(_bar $LEVEL $BACK_COLOR $FILL_COLOR $HEAD_COLOR)"
    else
        if [[ $MUTED != "no" ]]; then
            echo "MUTE"
        else
            echo "V$LEVEL"
        fi
    fi
}

battery() {
    PERCENT=$(batt percent)
    if [[ $CMD == 'bar' ]]; then
        if [[ $(batt status) = *"Discharging"* ]]; then
            if [ $PERCENT -le 10 ]; then
                FILL_COLOR="#ff4040"
                HEAD_COLOR="#ff4040"
                BACK_COLOR="#990c0c"
            else
                FILL_COLOR="#FBC011"
                HEAD_COLOR="#fce8a9"
                BACK_COLOR="#8c742c"
            fi
        else
            FILL_COLOR="#43CC70"
            HEAD_COLOR="#a5fac1"
            BACK_COLOR="#568565"
        fi
        echo "$(_bar $PERCENT $BACK_COLOR $FILL_COLOR $HEAD_COLOR)"
    else
        if [[ $(batt status) = *"Discharging"* ]]; then
            HOURS_LEFT=$(batt duration)
            if [ $PERCENT -le 10 ]; then
                echo "${URGENT_FG}$PERCENT%${HOURS_LEFT}${RESET_FG}"
            else
                echo "$PERCENT%${HOURS_LEFT}"
            fi
        else
            echo "AC:${PERCENT}%"
        fi
    fi
}

bluetooth() {
    if [[ $CMD == 'bar' ]]; then
        if [[ "$(bt)" == "on" ]]; then
            color="#0370FE"
        else
            color="#555555"
        fi
        echo "%{B$color} %{B-}"
    else
        if [[ "$(bt)" == "on" ]]; then
            echo "B"
        fi
    fi
}

email() {
    INBOX=$(notmuch count "folder:INBOX")
    UNREAD=$(notmuch count "tag:unread AND folder:INBOX")

    if [[ $CMD == 'bar' ]]; then
        if (( $UNREAD > 0 )); then
            color="#ff9e3d"
        else
            color="#555555"
        fi
        echo "%{B$color} %{B-}"
    else
        if (( $UNREAD > 0 )); then
            fg="$ALERT_FG"
        else
            fg="$RESET_FG"
        fi
        echo "${fg}M${INBOX}${RESET_FG}"
    fi
}

tasks() {
    TASK="$(task status)"

    if [[ $CMD == 'bar' ]]; then
        if [ ! -z "$TASK" ]; then
            color="#FF2F6D"
        else
            color="#555555"
        fi
        echo "%{B$color} %{B-}"
    else
        if [ ! -z "$TASK" ]; then
            echo "[${TASK}]"
        fi
    fi
}

muted() {
    if [[ $CMD == 'bar' ]]; then
        if [[ $(mute status) = "yes" ]]; then
            color="#555555"
        else
            color="#EF3838"
        fi
        echo "%{B$color} %{B-}"
    else
        if [[ $(mute status) = "yes" ]]; then
            echo "% "
        fi
    fi
}

datetime() {
    echo $(clock -f '%m/%d·%H:%M')
}

syncthing() {
    if [[ $CMD == 'bar' ]]; then
        if pgrep -x "syncthing" > /dev/null; then
            color="#e5cf2b"
        else
            color="#555555"
        fi
        echo "%{B$color} %{B-}"
    else
        if pgrep -x "syncthing" > /dev/null; then
            echo "␖"
        else
            echo ""
        fi
    fi
}

if [[ $CMD == 'tmux' ]]; then
    echo "$(syncthing)$(tasks)$(bluetooth) $(battery) $(email) $(muted)$(volume) $(wifi) $(datetime)"
elif [[ $CMD == 'bar' ]]; then
    while true; do
        echo "S$(syncthing)$(tasks)$(email) $(battery) $(bluetooth)$(muted)$(volume) $(wifi)"
        sleep 3
    done
elif [[ $CMD == 'notify' ]]; then
    notify-send -t 5000 "$(echo -e "$(datetime)\n$(tasks)$(bluetooth)$(email) $(muted)$(volume)\n$(battery)\n$(wifi)")"
fi
