#!/bin/bash
VIDEO="$1"
SUBS="$2"


echo "Finding chromecast..."
CHROMECAST_IP=$(nmap 192.168.1.1/24 -p 8008 -oG - | grep 8008/open | awk '{print $2}')
echo "Chromecast at $CHROMECAST_IP."

echo "Determining encoding..."
ENCODING=$(ffprobe -v error -select_streams v:0 -show_entries stream=codec_name -of default=noprint_wrappers=1:nokey=1 "$VIDEO")
echo "Encoding is $ENCODING..."

if [ "$ENCODING" == "h264" ]; then
    echo "...streaming file directly."
    # If already x264 (our chromecast doesn't support x265)
    vlc --sout "#chromecast" --sout-chromecast-ip=$CHROMECAST_IP --sout-chromecast-conversion-quality=0 --demux-filter=demux_chromecast "$VIDEO"
else
    # Live transcode to x264.
    # VLC is supposed to be able to do the transcoding itself,
    # but I haven't been able to get this to work:
    #
    # NOTE: you can't seek/skip with this, unfortunately.
    # If you want to that you're better off converting to x264:
    #   ffmpeg -i "$VIDEO" -vcodec libx264 -acodec aac -crf 28 -preset ultrafast "${VIDEO}.x264.mp4"
    echo "...transcoding file on-the-fly. You won't be able to seek."
    ffmpeg -i "$VIDEO" -vf "subtitles=$SUBS:force_style='Fontsize=36,PrimaryColour=&H0000FFFF'" -vcodec libx264 -acodec aac -crf 28 -preset ultrafast -f matroska - | vlc --sout "#chromecast" --sout-chromecast-ip=$CHROMECAST_IP --sout-chromecast-conversion-quality=0 --demux-filter=demux_chromecast -
fi