#!/bin/bash
# sync data between phone and laptop over USB
# requires adb-sync for mode=usb
# requires sshhelper running on the phone for mode=ssh
#
# Usage:
#   phonesync usb
#   phonesync ssh admin@192.168.68.102:2222

MODE=$1 # "usb" or "ssh"
HOST=$2 # e.g. admin@191.168.68.102:2222

if [[ $MODE == 'ssh' ]]; then
    if [[ -z $HOST ]]; then
        echo "If using ssh mode, must specify host"
        exit 1
    else
        PORT=$(echo $HOST | cut -f2 -d:)
        HOST=$(echo $HOST | cut -f1 -d:)
    fi
fi

function sync() {
    SRC="$1"
    DEST="$2"
    shift 2
    if [[ $MODE == 'ssh' ]]; then
        if [[ "$SRC" == /sdcard/* ]]; then
            rsync -ravu --progress $@ -e 'ssh -p '$PORT $HOST:"$SRC" "$DEST"
        else
            rsync -ravu --progress $@ -e 'ssh -p '$PORT "$SRC" $HOST:"$DEST"
        fi
    else
        if [[ "$SRC" == /sdcard/* ]]; then
            adb-sync --reverse $@ "$SRC" "$DEST"
        else
            adb-sync $@ "$SRC" "$DEST"
        fi
    fi
}

# sync directories TO the phone
cp ~/docs/pass.kdbx ~/docs/deaddrop/
sync ~/docs/deaddrop/ /sdcard/deaddrop --delete --force --copy-links

declare -A backups
backups[DCIM/Camera]=~/photos/phone/dcim
backups[Pictures]=~/photos/phone/misc
backups[tencent/MicroMsg/WeChat]=~/photos/phone/wechat

# backup (i.e. don't delete)
# directories FROM the phone
for DIR in "${!backups[@]}"; do
    echo "Backing up /sdcard/${DIR} -> ${backups[$DIR]}"
    sync "/sdcard/${DIR}/" "${backups[$DIR]}"
done

sync "/sdcard/Backups/" ~/docs/backups/phone

# sync select music TO the phone
MUSIC_BASE_DIR=~/musics/
MUSIC_PLAYLIST=~/musics/_playlists/music.m3u

# parse a m3u playlist
function parse_songs() {
    while read line; do
        echo "${MUSIC_BASE_DIR}${line}"
    done <$MUSIC_PLAYLIST
}

# create temporary directory for songs
rm -rf /tmp/musics
mkdir /tmp/musics
parse_songs | xargs -0 -d '\n' -I {} cp {} /tmp/musics/
sync /tmp/musics/ /sdcard/Music/musics --delete
rm -rf /tmp/musics

# get epub highlights/quotes
# note: to get the latest, you need to first create a backup in readera
# it does auto-backups too though
if [ -d "/tmp/readera" ]; then rm -r /tmp/readera; fi
mkdir /tmp/readera
sync "/sdcard/ReadEra/Backups" "/tmp/readera"
cd /tmp/readera/Backups
latest=$(ls | sort | tail -1)
unzip "$latest"
date=$(date '+%Y%m%d')
cp "$latest" ~/docs/backups/phone/readera.${date}.bak
cat library.json | jq -r '[.docs[] | select((.citations | length) > 0)]' > ~/notes/annos/phone.json