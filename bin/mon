#!/bin/bash
# Note: run `xrandr -q` to list connected outputs (monitors). Set the appropriate monitor as EXMON.

PLACE=$1
INMON=eDP-1
EXMON=HDMI-2

function restart_panel {
    # Kill the panel/lemonbar and restart
    pkill panel
    panel &

    # Restart dunst too, to correct
    # notification placement
    pkill dunst
    dunst &
}


# so bspc properly picks up the primary monitor
xrandr --output "$INMON" --auto --primary

# Set this here for convenience
bspc config remove_unplugged_monitors true

if [[ $PLACE == 'right' ]]; then
    EXMON_PLACE=R
    INMON_PLACE=L
    POSITION=right-of
elif [[ $PLACE == 'left' ]]; then
    EXMON_PLACE=L
    INMON_PLACE=R
    POSITION=left-of
elif [[ $PLACE == 'above' ]]; then
    EXMON_PLACE=A
    INMON_PLACE=B
    POSITION=above
elif [[ $PLACE == 'below' ]]; then
    EXMON_PLACE=B
    INMON_PLACE=A
    POSITION=below
elif [[ $PLACE == 'mirror' ]]; then
    EXMON_PLACE=M
    INMON_PLACE=P
    POSITION=mirror
elif [[ $PLACE == 'reset' ]]; then
    # figure out the primary monitor name
    PRNAME=$(bspc query -M -m primary --names)
    if [[ $PRNAME == 'R' ]]; then
        EXNAME=L
    elif [[ $PRNAME == 'L' ]]; then
        EXNAME=R
    elif [[ $PRNAME == 'A' ]]; then
        EXNAME=B
    elif [[ $PRNAME == 'B' ]]; then
        EXNAME=A
    elif [[ $PRNAME == 'P' ]]; then
        EXNAME=M
    fi

    if [ ! -z "$EXNAME" ]; then
        # TODO how to get non-primary monitor name?
        # try getting primary mon id, then getting the next monitor

        # list windows on ext mon, move them to primary mon
        bspc query -N -m $EXNAME | xargs -L1 -I % bspc node % -m primary

        # list desktops on ext mon, get their numbers, remove them all
        bspc query -D -m $EXNAME | grep -n '.' | cut -f1 -d: | xargs -L1 -I % bspc desktop $EXNAME:^% -r

        # rename the monitors for reuse later
        bspc monitor primary -n "$INMON"
        bspc monitor $EXNAME -n "$EXMON"

        # "unplug" the monitor
        xrandr --output "$EXMON" --off

        # wait for the monitor to be removed
        # then reset desktops (otherwise the last one sticks)
        bspc subscribe monitor | while read -a msg ; do
            if [[ $msg == 'monitor_remove' ]]; then
                bspc monitor primary --reset-desktops "#" "#" "#"
                break
            fi
        done
    fi

    # reset the wallpaper to render properly
    feh --bg-fill ~/.wall.jpg &

    restart_panel
    exit 0
else
    echo "Please specify 'left', 'right', 'above', 'below', 'mirror', or 'reset'."
    exit 1
fi

# set primary monitory
xrandr --output "$INMON" --auto --primary
bspc monitor primary -n "$INMON"

# place the external monitor to the specified position
if [[ $PLACE == 'mirror' ]]; then
    RES=$(xrandr | grep \* | awk '{print $1}')
    xrandr --output "$EXMON" --auto --scale-from $RES --output "$INMON"
else
    # if external monitor is 4k, use `--scale 0.5x0.5`
    xrandr --output "$EXMON" --auto --$POSITION "$INMON"
fi

# NOTE some monitors will be set to "overscan"
# which clips the borders.
# you can try something like this to compensate:
# xrandr --output $EXMON --set underscan on
# xrandr --output $EXMON --set "underscan hborder" 40 --set "underscan vborder" 25

# rename each monitor so sxhkd can use it with bspwm to move focus/windows/desktops across monitors
bspc monitor $(bspc query -M -m primary --names) -n $INMON_PLACE
bspc monitor $(bspc query -M -m primary#next --names) -n $EXMON_PLACE

# setup desktops on external monitor
bspc monitor $EXMON_PLACE -d "#" "#" "#"

# reset the wallpaper to render properly
feh --bg-fill ~/.wall.jpg &

restart_panel