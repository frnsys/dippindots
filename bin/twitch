#!/bin/bash
# USAGE: twitch -m <MONITOR NAME>
# Use -w to enable webcam
# Use -a to enable microphone
# ---
# reference: <https://wiki.archlinux.org/index.php/Streaming_using_twitch.tv>
# reference: <https://trac.ffmpeg.org/wiki/EncodingForStreamingSites>
# ---
# Lookup pulse source with:
#   pactl list | grep -A2 'Source #' | grep 'Name: ' | cut -d" " -f2
# ---
# Webcam setup
# git clone https://github.com/chendotjs/Webcam-SDL2
# sudo apt-get install libsdl2-dev
# cd Webcam-SDL2/src
# make
# sudo mv simple_cam /usr/local/bin/

# Kill child processes
trap 'jobs -p | xargs kill' EXIT

MONITOR=eDP1
MIC_INPUT=$(pactl list | grep -A2 'Source #' | grep 'Name: ' | cut -d" " -f2 | dmenu)
if [ -z "$MIC_INPUT" ] ; then
    exit 0
fi

MON_INPUT=alsa_output.pci-0000_00_1f.3.analog-stereo.monitor
while getopts ":m:wa" OPT; do
    echo $OPT
    case $OPT in
        m)
            MONITOR=$OPTARG
            ;;
        w)
            WEBCAM=true
            ;;
        a)
            MIC=true
            ;;
        ?)
            exit
            ;;
    esac
done

MONINFO=$(xrandr | grep ${MONITOR} | sed 's/primary//' | awk '{print $3}')
if [ -z "$MONINFO" ]; then
    echo "Couldn't find info for monitor ${MONITOR}"
    echo "use xrandr to see monitor names"
    exit
fi

STREAM_KEY=$(cat ~/.stream_key 2>/dev/null) || { echo "Couldn't find Twitch stream key at ~/.stream_key"; exit 1; }

INPUTRES=$(echo "$MONINFO" | sed 's/+[0-9]\++[0-9]\+//')
OFFSET=$(echo "$MONINFO" | sed 's/[0-9]\+x[0-9]\++//' | sed 's/+/,/')
echo "Input Res: ${INPUTRES}"
echo "Offset: ${OFFSET}"

FPS=15
GOP=30 # should be double FPS
OUTPUT_WIDTH=1280
QUALITY=ultrafast
THREADS=0 # 0 to auto set according to cpus
AUDIO_ERATE=96k
AUDIO_SRATE=44100
CBR="1000k" # constant bitrate (should be between 1000k - 3000k)

# list: http://bashtech.net/twitch/ingest.php
SERVER=live-jfk

WEBCAM_ARGS=""
MIC_ARGS=""
if [ "$WEBCAM" = true ] ; then
    WEBCAM_ARGS="-f v4l2 -video_size 320x240 -framerate $FPS -i /dev/video0 -filter_complex "[0][1]overlay=x=W-w:y=H-h""
fi
if [ "$MIC" = true ] ; then
    MIC_ARGS="-f pulse -ac 2 -i $MIC_INPUT -filter_complex amix=inputs=2"
fi

ffmpeg -f x11grab -s $INPUTRES -framerate $FPS -i :0.0+$OFFSET \
    $WEBCAM_ARGS \
    -f pulse -ac 2 -i $MON_INPUT \
    $MIC_ARGS \
    -c:v libx264 -preset $QUALITY -pix_fmt yuv420p \
    -g $GOP -keyint_min $FPS \
    -b:v $CBR -minrate $CBR -maxrate $CBR -bufsize $CBR \
    -c:a aac -b:a $AUDIO_ERATE -ar $AUDIO_SRATE \
    -threads $THREADS -strict normal -f flv "rtmp://${SERVER}.twitch.tv/app/${STREAM_KEY}"